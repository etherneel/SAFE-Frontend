"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/end-of-stream";
exports.ids = ["vendor-chunks/end-of-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/end-of-stream/index.js":
/*!*********************************************!*\
  !*** ./node_modules/end-of-stream/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar once = __webpack_require__(/*! once */ \"(ssr)/./node_modules/once/once.js\");\nvar noop = function() {};\nvar isRequest = function(stream) {\n    return stream.setHeader && typeof stream.abort === \"function\";\n};\nvar isChildProcess = function(stream) {\n    return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;\n};\nvar eos = function(stream, opts, callback) {\n    if (typeof opts === \"function\") return eos(stream, null, opts);\n    if (!opts) opts = {};\n    callback = once(callback || noop);\n    var ws = stream._writableState;\n    var rs = stream._readableState;\n    var readable = opts.readable || opts.readable !== false && stream.readable;\n    var writable = opts.writable || opts.writable !== false && stream.writable;\n    var cancelled = false;\n    var onlegacyfinish = function() {\n        if (!stream.writable) onfinish();\n    };\n    var onfinish = function() {\n        writable = false;\n        if (!readable) callback.call(stream);\n    };\n    var onend = function() {\n        readable = false;\n        if (!writable) callback.call(stream);\n    };\n    var onexit = function(exitCode) {\n        callback.call(stream, exitCode ? new Error(\"exited with error code: \" + exitCode) : null);\n    };\n    var onerror = function(err) {\n        callback.call(stream, err);\n    };\n    var onclose = function() {\n        process.nextTick(onclosenexttick);\n    };\n    var onclosenexttick = function() {\n        if (cancelled) return;\n        if (readable && !(rs && rs.ended && !rs.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n        if (writable && !(ws && ws.ended && !ws.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n    };\n    var onrequest = function() {\n        stream.req.on(\"finish\", onfinish);\n    };\n    if (isRequest(stream)) {\n        stream.on(\"complete\", onfinish);\n        stream.on(\"abort\", onclose);\n        if (stream.req) onrequest();\n        else stream.on(\"request\", onrequest);\n    } else if (writable && !ws) {\n        stream.on(\"end\", onlegacyfinish);\n        stream.on(\"close\", onlegacyfinish);\n    }\n    if (isChildProcess(stream)) stream.on(\"exit\", onexit);\n    stream.on(\"end\", onend);\n    stream.on(\"finish\", onfinish);\n    if (opts.error !== false) stream.on(\"error\", onerror);\n    stream.on(\"close\", onclose);\n    return function() {\n        cancelled = true;\n        stream.removeListener(\"complete\", onfinish);\n        stream.removeListener(\"abort\", onclose);\n        stream.removeListener(\"request\", onrequest);\n        if (stream.req) stream.req.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"end\", onlegacyfinish);\n        stream.removeListener(\"close\", onlegacyfinish);\n        stream.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"exit\", onexit);\n        stream.removeListener(\"end\", onend);\n        stream.removeListener(\"error\", onerror);\n        stream.removeListener(\"close\", onclose);\n    };\n};\nmodule.exports = eos;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZW5kLW9mLXN0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsT0FBT0MsbUJBQU9BLENBQUM7QUFFbkIsSUFBSUMsT0FBTyxZQUFZO0FBRXZCLElBQUlDLFlBQVksU0FBU0MsTUFBTTtJQUM5QixPQUFPQSxPQUFPQyxTQUFTLElBQUksT0FBT0QsT0FBT0UsS0FBSyxLQUFLO0FBQ3BEO0FBRUEsSUFBSUMsaUJBQWlCLFNBQVNILE1BQU07SUFDbkMsT0FBT0EsT0FBT0ksS0FBSyxJQUFJQyxNQUFNQyxPQUFPLENBQUNOLE9BQU9JLEtBQUssS0FBS0osT0FBT0ksS0FBSyxDQUFDRyxNQUFNLEtBQUs7QUFDL0U7QUFFQSxJQUFJQyxNQUFNLFNBQVNSLE1BQU0sRUFBRVMsSUFBSSxFQUFFQyxRQUFRO0lBQ3hDLElBQUksT0FBT0QsU0FBUyxZQUFZLE9BQU9ELElBQUlSLFFBQVEsTUFBTVM7SUFDekQsSUFBSSxDQUFDQSxNQUFNQSxPQUFPLENBQUM7SUFFbkJDLFdBQVdkLEtBQUtjLFlBQVlaO0lBRTVCLElBQUlhLEtBQUtYLE9BQU9ZLGNBQWM7SUFDOUIsSUFBSUMsS0FBS2IsT0FBT2MsY0FBYztJQUM5QixJQUFJQyxXQUFXTixLQUFLTSxRQUFRLElBQUtOLEtBQUtNLFFBQVEsS0FBSyxTQUFTZixPQUFPZSxRQUFRO0lBQzNFLElBQUlDLFdBQVdQLEtBQUtPLFFBQVEsSUFBS1AsS0FBS08sUUFBUSxLQUFLLFNBQVNoQixPQUFPZ0IsUUFBUTtJQUMzRSxJQUFJQyxZQUFZO0lBRWhCLElBQUlDLGlCQUFpQjtRQUNwQixJQUFJLENBQUNsQixPQUFPZ0IsUUFBUSxFQUFFRztJQUN2QjtJQUVBLElBQUlBLFdBQVc7UUFDZEgsV0FBVztRQUNYLElBQUksQ0FBQ0QsVUFBVUwsU0FBU1UsSUFBSSxDQUFDcEI7SUFDOUI7SUFFQSxJQUFJcUIsUUFBUTtRQUNYTixXQUFXO1FBQ1gsSUFBSSxDQUFDQyxVQUFVTixTQUFTVSxJQUFJLENBQUNwQjtJQUM5QjtJQUVBLElBQUlzQixTQUFTLFNBQVNDLFFBQVE7UUFDN0JiLFNBQVNVLElBQUksQ0FBQ3BCLFFBQVF1QixXQUFXLElBQUlDLE1BQU0sNkJBQTZCRCxZQUFZO0lBQ3JGO0lBRUEsSUFBSUUsVUFBVSxTQUFTQyxHQUFHO1FBQ3pCaEIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUTBCO0lBQ3ZCO0lBRUEsSUFBSUMsVUFBVTtRQUNiQyxRQUFRQyxRQUFRLENBQUNDO0lBQ2xCO0lBRUEsSUFBSUEsa0JBQWtCO1FBQ3JCLElBQUliLFdBQVc7UUFDZixJQUFJRixZQUFZLENBQUVGLENBQUFBLE1BQU9BLEdBQUdrQixLQUFLLElBQUksQ0FBQ2xCLEdBQUdtQixTQUFTLEdBQUksT0FBT3RCLFNBQVNVLElBQUksQ0FBQ3BCLFFBQVEsSUFBSXdCLE1BQU07UUFDN0YsSUFBSVIsWUFBWSxDQUFFTCxDQUFBQSxNQUFPQSxHQUFHb0IsS0FBSyxJQUFJLENBQUNwQixHQUFHcUIsU0FBUyxHQUFJLE9BQU90QixTQUFTVSxJQUFJLENBQUNwQixRQUFRLElBQUl3QixNQUFNO0lBQzlGO0lBRUEsSUFBSVMsWUFBWTtRQUNmakMsT0FBT2tDLEdBQUcsQ0FBQ0MsRUFBRSxDQUFDLFVBQVVoQjtJQUN6QjtJQUVBLElBQUlwQixVQUFVQyxTQUFTO1FBQ3RCQSxPQUFPbUMsRUFBRSxDQUFDLFlBQVloQjtRQUN0Qm5CLE9BQU9tQyxFQUFFLENBQUMsU0FBU1I7UUFDbkIsSUFBSTNCLE9BQU9rQyxHQUFHLEVBQUVEO2FBQ1hqQyxPQUFPbUMsRUFBRSxDQUFDLFdBQVdGO0lBQzNCLE9BQU8sSUFBSWpCLFlBQVksQ0FBQ0wsSUFBSTtRQUMzQlgsT0FBT21DLEVBQUUsQ0FBQyxPQUFPakI7UUFDakJsQixPQUFPbUMsRUFBRSxDQUFDLFNBQVNqQjtJQUNwQjtJQUVBLElBQUlmLGVBQWVILFNBQVNBLE9BQU9tQyxFQUFFLENBQUMsUUFBUWI7SUFFOUN0QixPQUFPbUMsRUFBRSxDQUFDLE9BQU9kO0lBQ2pCckIsT0FBT21DLEVBQUUsQ0FBQyxVQUFVaEI7SUFDcEIsSUFBSVYsS0FBSzJCLEtBQUssS0FBSyxPQUFPcEMsT0FBT21DLEVBQUUsQ0FBQyxTQUFTVjtJQUM3Q3pCLE9BQU9tQyxFQUFFLENBQUMsU0FBU1I7SUFFbkIsT0FBTztRQUNOVixZQUFZO1FBQ1pqQixPQUFPcUMsY0FBYyxDQUFDLFlBQVlsQjtRQUNsQ25CLE9BQU9xQyxjQUFjLENBQUMsU0FBU1Y7UUFDL0IzQixPQUFPcUMsY0FBYyxDQUFDLFdBQVdKO1FBQ2pDLElBQUlqQyxPQUFPa0MsR0FBRyxFQUFFbEMsT0FBT2tDLEdBQUcsQ0FBQ0csY0FBYyxDQUFDLFVBQVVsQjtRQUNwRG5CLE9BQU9xQyxjQUFjLENBQUMsT0FBT25CO1FBQzdCbEIsT0FBT3FDLGNBQWMsQ0FBQyxTQUFTbkI7UUFDL0JsQixPQUFPcUMsY0FBYyxDQUFDLFVBQVVsQjtRQUNoQ25CLE9BQU9xQyxjQUFjLENBQUMsUUFBUWY7UUFDOUJ0QixPQUFPcUMsY0FBYyxDQUFDLE9BQU9oQjtRQUM3QnJCLE9BQU9xQyxjQUFjLENBQUMsU0FBU1o7UUFDL0J6QixPQUFPcUMsY0FBYyxDQUFDLFNBQVNWO0lBQ2hDO0FBQ0Q7QUFFQVcsT0FBT0MsT0FBTyxHQUFHL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aXRoLXRhaWx3aW5kY3NzLWFwcC8uL25vZGVfbW9kdWxlcy9lbmQtb2Ytc3RyZWFtL2luZGV4LmpzP2M0MGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG9uY2UgPSByZXF1aXJlKCdvbmNlJyk7XG5cbnZhciBub29wID0gZnVuY3Rpb24oKSB7fTtcblxudmFyIGlzUmVxdWVzdCA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuXHRyZXR1cm4gc3RyZWFtLnNldEhlYWRlciAmJiB0eXBlb2Ygc3RyZWFtLmFib3J0ID09PSAnZnVuY3Rpb24nO1xufTtcblxudmFyIGlzQ2hpbGRQcm9jZXNzID0gZnVuY3Rpb24oc3RyZWFtKSB7XG5cdHJldHVybiBzdHJlYW0uc3RkaW8gJiYgQXJyYXkuaXNBcnJheShzdHJlYW0uc3RkaW8pICYmIHN0cmVhbS5zdGRpby5sZW5ndGggPT09IDNcbn07XG5cbnZhciBlb3MgPSBmdW5jdGlvbihzdHJlYW0sIG9wdHMsIGNhbGxiYWNrKSB7XG5cdGlmICh0eXBlb2Ygb3B0cyA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGVvcyhzdHJlYW0sIG51bGwsIG9wdHMpO1xuXHRpZiAoIW9wdHMpIG9wdHMgPSB7fTtcblxuXHRjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2sgfHwgbm9vcCk7XG5cblx0dmFyIHdzID0gc3RyZWFtLl93cml0YWJsZVN0YXRlO1xuXHR2YXIgcnMgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG5cdHZhciByZWFkYWJsZSA9IG9wdHMucmVhZGFibGUgfHwgKG9wdHMucmVhZGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS5yZWFkYWJsZSk7XG5cdHZhciB3cml0YWJsZSA9IG9wdHMud3JpdGFibGUgfHwgKG9wdHMud3JpdGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS53cml0YWJsZSk7XG5cdHZhciBjYW5jZWxsZWQgPSBmYWxzZTtcblxuXHR2YXIgb25sZWdhY3lmaW5pc2ggPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoIXN0cmVhbS53cml0YWJsZSkgb25maW5pc2goKTtcblx0fTtcblxuXHR2YXIgb25maW5pc2ggPSBmdW5jdGlvbigpIHtcblx0XHR3cml0YWJsZSA9IGZhbHNlO1xuXHRcdGlmICghcmVhZGFibGUpIGNhbGxiYWNrLmNhbGwoc3RyZWFtKTtcblx0fTtcblxuXHR2YXIgb25lbmQgPSBmdW5jdGlvbigpIHtcblx0XHRyZWFkYWJsZSA9IGZhbHNlO1xuXHRcdGlmICghd3JpdGFibGUpIGNhbGxiYWNrLmNhbGwoc3RyZWFtKTtcblx0fTtcblxuXHR2YXIgb25leGl0ID0gZnVuY3Rpb24oZXhpdENvZGUpIHtcblx0XHRjYWxsYmFjay5jYWxsKHN0cmVhbSwgZXhpdENvZGUgPyBuZXcgRXJyb3IoJ2V4aXRlZCB3aXRoIGVycm9yIGNvZGU6ICcgKyBleGl0Q29kZSkgOiBudWxsKTtcblx0fTtcblxuXHR2YXIgb25lcnJvciA9IGZ1bmN0aW9uKGVycikge1xuXHRcdGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuXHR9O1xuXG5cdHZhciBvbmNsb3NlID0gZnVuY3Rpb24oKSB7XG5cdFx0cHJvY2Vzcy5uZXh0VGljayhvbmNsb3NlbmV4dHRpY2spO1xuXHR9O1xuXG5cdHZhciBvbmNsb3NlbmV4dHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoY2FuY2VsbGVkKSByZXR1cm47XG5cdFx0aWYgKHJlYWRhYmxlICYmICEocnMgJiYgKHJzLmVuZGVkICYmICFycy5kZXN0cm95ZWQpKSkgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBuZXcgRXJyb3IoJ3ByZW1hdHVyZSBjbG9zZScpKTtcblx0XHRpZiAod3JpdGFibGUgJiYgISh3cyAmJiAod3MuZW5kZWQgJiYgIXdzLmRlc3Ryb3llZCkpKSByZXR1cm4gY2FsbGJhY2suY2FsbChzdHJlYW0sIG5ldyBFcnJvcigncHJlbWF0dXJlIGNsb3NlJykpO1xuXHR9O1xuXG5cdHZhciBvbnJlcXVlc3QgPSBmdW5jdGlvbigpIHtcblx0XHRzdHJlYW0ucmVxLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG5cdH07XG5cblx0aWYgKGlzUmVxdWVzdChzdHJlYW0pKSB7XG5cdFx0c3RyZWFtLm9uKCdjb21wbGV0ZScsIG9uZmluaXNoKTtcblx0XHRzdHJlYW0ub24oJ2Fib3J0Jywgb25jbG9zZSk7XG5cdFx0aWYgKHN0cmVhbS5yZXEpIG9ucmVxdWVzdCgpO1xuXHRcdGVsc2Ugc3RyZWFtLm9uKCdyZXF1ZXN0Jywgb25yZXF1ZXN0KTtcblx0fSBlbHNlIGlmICh3cml0YWJsZSAmJiAhd3MpIHsgLy8gbGVnYWN5IHN0cmVhbXNcblx0XHRzdHJlYW0ub24oJ2VuZCcsIG9ubGVnYWN5ZmluaXNoKTtcblx0XHRzdHJlYW0ub24oJ2Nsb3NlJywgb25sZWdhY3lmaW5pc2gpO1xuXHR9XG5cblx0aWYgKGlzQ2hpbGRQcm9jZXNzKHN0cmVhbSkpIHN0cmVhbS5vbignZXhpdCcsIG9uZXhpdCk7XG5cblx0c3RyZWFtLm9uKCdlbmQnLCBvbmVuZCk7XG5cdHN0cmVhbS5vbignZmluaXNoJywgb25maW5pc2gpO1xuXHRpZiAob3B0cy5lcnJvciAhPT0gZmFsc2UpIHN0cmVhbS5vbignZXJyb3InLCBvbmVycm9yKTtcblx0c3RyZWFtLm9uKCdjbG9zZScsIG9uY2xvc2UpO1xuXG5cdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRjYW5jZWxsZWQgPSB0cnVlO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY29tcGxldGUnLCBvbmZpbmlzaCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdhYm9ydCcsIG9uY2xvc2UpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcigncmVxdWVzdCcsIG9ucmVxdWVzdCk7XG5cdFx0aWYgKHN0cmVhbS5yZXEpIHN0cmVhbS5yZXEucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9ubGVnYWN5ZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25sZWdhY3lmaW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXhpdCcsIG9uZXhpdCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcblx0fTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW9zO1xuIl0sIm5hbWVzIjpbIm9uY2UiLCJyZXF1aXJlIiwibm9vcCIsImlzUmVxdWVzdCIsInN0cmVhbSIsInNldEhlYWRlciIsImFib3J0IiwiaXNDaGlsZFByb2Nlc3MiLCJzdGRpbyIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImVvcyIsIm9wdHMiLCJjYWxsYmFjayIsIndzIiwiX3dyaXRhYmxlU3RhdGUiLCJycyIsIl9yZWFkYWJsZVN0YXRlIiwicmVhZGFibGUiLCJ3cml0YWJsZSIsImNhbmNlbGxlZCIsIm9ubGVnYWN5ZmluaXNoIiwib25maW5pc2giLCJjYWxsIiwib25lbmQiLCJvbmV4aXQiLCJleGl0Q29kZSIsIkVycm9yIiwib25lcnJvciIsImVyciIsIm9uY2xvc2UiLCJwcm9jZXNzIiwibmV4dFRpY2siLCJvbmNsb3NlbmV4dHRpY2siLCJlbmRlZCIsImRlc3Ryb3llZCIsIm9ucmVxdWVzdCIsInJlcSIsIm9uIiwiZXJyb3IiLCJyZW1vdmVMaXN0ZW5lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/end-of-stream/index.js\n");

/***/ })

};
;